
== 用語集

[glossary]
ビルド順序::
	ビルド順序はタスクが実行される順序だ。タスクは並列に実行される可能性があり、ビルド順序はタスク間の制約から計算することができる。(通常、矛盾する順序制約によって)ビルド順序が計算できない場合、ビルドはデッドロックの状態にあるといわれる。
依存関係::
	依存関係はタスクが最新の状態とみなせるか否かの条件を表す(実行ステータス)。依存関係は明示的(ファイルのインプットとアウトプット)もしくは抽象的(例えば値に対する依存関係)だ。
タスクジェネレータ::
	タスクジェネレータはTask.task_genクラスのインスタンスだ。タスクジェネレータはさまざまなタスクインスタンスの生成をカプセル化し、それらのタスク間の順序制約の生成を簡略化する(例えば、コンパイルタスクはリンクタスクの前に実行される)。
タスク::
	WafのタスクはTask.TaskBaseクラスのインスタンスだ。Wafのタスクは単純なもの(Task.TaskBase)、もしくはファイルシステムに関連付けられている(Task.Task)。タスクはビルドでの成果物(一般的にファイル)を表現し、(順序制約により)シーケンシャルもしくは並列に実行される。
ツール::
	WafツールはWaf特有の拡張を含んだPythonモジュールだ。Wafツールは +waflib/Tools/+ フォルダに存在し、通常、configureで実行される関数を参照するグローバル変数 'configure' を含む。
ノード::
	Nodeクラスはファイルシステムを効率的に表現するために使われるデータ構造だ。ノードオブジェクトはファイルもしくはフォルダだ。ファイルノードはシグネチャオブジェクトと関連付けられている。シグネチャはファイルの中身のハッシュ(ソースファイル)かタスクシグネチャ(ビルドファイル)だ。
コマンド::
	トップレベルのプロジェクトファイル(wscript)に存在する関数で 'waflib.Context.Context' インスタンスを唯一の入力パラメータとして受け付ける。関数名がコマンドラインで与えられるとその関数が実行される(例えば 'waf configure' を実行すると関数 'configure' が実行される)
バリアント::
	異なるコンパイルフラグで同じターゲットを生成するための(ビルド)コマンドを有効にするために使われる、追加のアウトプットディレクトリ
